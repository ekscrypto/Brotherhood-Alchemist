//
//  Ingredient.swift
//  Brotherhood Alchemist
//
//  Created by Dave Poirier on 2017-10-01.
//  Copyright Â© 2017-2022 Dave Poirier. All rights reserved.
//

import UIKit

struct Ingredient: Equatable, Codable {
    static func == (lhs: Ingredient, rhs: Ingredient) -> Bool {
        lhs.id == rhs.id
    }

    struct Id: Codable, Equatable, RawRepresentable, Hashable, ExpressibleByIntegerLiteral {
        init(integerLiteral value: UInt) {
            self.rawValue = value
        }
        
        init(rawValue: UInt) {
            self.rawValue = rawValue
        }
        
        typealias IntegerLiteralType = UInt
        
        let rawValue: UInt
    }
    
    let id: Id
    let name: ConstrainedName
    let effects: [Effect.Id]
    var isAvailable: Bool = true
    
    enum Errors: Error {
        case tooManyEffects
        case repeatingEffects
    }
    static let maximumEffects: Int = 4

    init?(id: Id, name: ConstrainedName, effects: [Effect.Id] ) {
        self.id = id
        self.name = name
        guard let uniqueEffects = try? Self.uniqueEffectsWithinBounds(effects) else {
            return nil
        }
        self.effects = uniqueEffects
    }
    
    init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: Self.CodingKeys)
        self.id = try container.decode(Id.self, forKey: .id)
        self.name = try container.decode(ConstrainedName.self, forKey: .name)
        let decodedEffects = try container.decode([Effect.Id].self, forKey: .effects)
        self.effects = try Self.uniqueEffectsWithinBounds(decodedEffects)
        self.isAvailable = try container.decode(Bool.self, forKey: .isAvailable)
    }
    
    @discardableResult
    static func uniqueEffectsWithinBounds(_ effects: [Effect.Id]) throws -> [Effect.Id] {
        guard effects.count <= Self.maximumEffects else {
            throw Errors.tooManyEffects
        }
        guard Set(effects).count == effects.count else {
            throw Errors.repeatingEffects
        }
        return effects
    }
    
    static let defaultIngredients: [Ingredient] = [
        Ingredient(id: 1,
                   name: ConstrainedName(rawValue: "Abecean Longfin")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFrost, .fortifySneak, .weaknessToPoison, .fortifyRestoration]))!,
        Ingredient(id: 2,
                   name: ConstrainedName(rawValue: "Ancestor Moth Wing")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fortifyConjuration, .damageMagickaRegen, .fortifyEnchanting]))!,
        Ingredient(id: 3,
                   name: ConstrainedName(rawValue: "Ash Creep Cluster")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .invisibility, .resistFire, .fortifyDestruction]))!,
        Ingredient(id: 4,
                   name: ConstrainedName(rawValue: "Ash Hopper Jelly")!,
                   effects: Effect.DefaultEffectId.values([.restoreHealth, .fortifyLightArmor, .resistShock, .weaknessToFrost]))!,
        Ingredient(id: 5,
                   name: ConstrainedName(rawValue: "Ashen Grass Pod")!,
                   effects: Effect.DefaultEffectId.values([.resistFire, .weaknessToShock, .fortifyLockpicking, .fortifySneak]))!,
        Ingredient(id: 6,
                   name: ConstrainedName(rawValue: "Bear Claws")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyHealth, .fortifyOneHanded, .damageMagickaRegen]))!,
        Ingredient(id: 7,
                   name: ConstrainedName(rawValue: "Bee")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .ravageStamina, .regenerateStamina, .weaknessToShock]))!,
        Ingredient(id: 8,
                   name: ConstrainedName(rawValue: "Beehive Husk")!,
                   effects: Effect.DefaultEffectId.values([.resistPoison, .fortifyLightArmor, .fortifySneak, .fortifyDestruction]))!,
        Ingredient(id: 9,
                   name: ConstrainedName(rawValue: "Berit's Ashes")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fortifyConjuration, .resistFire, .ravageStamina]))!,
        Ingredient(id: 10,
                   name: ConstrainedName(rawValue: "Bleeding Crown")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFire, .fortifyBlock, .weaknessToPoison, .resistMagic]))!,
        Ingredient(id: 11,
                   name: ConstrainedName(rawValue: "Blisterwort")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .restoreHealth, .frenzy, .fortifySmithing]))!,
        Ingredient(id: 12,
                   name: ConstrainedName(rawValue: "Blue Butterfly Wing")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .damageMagickaRegen, .fortifyConjuration, .fortifyEnchanting]))!,
        Ingredient(id: 13,
                   name: ConstrainedName(rawValue: "Blue Dartwing")!,
                   effects: Effect.DefaultEffectId.values([.resistShock, .restoreHealth, .fortifyPickpocket, .fear]))!,
        Ingredient(id: 14,
                   name: ConstrainedName(rawValue: "Blue Mountain Flower")!,
                   effects: Effect.DefaultEffectId.values([.restoreHealth, .fortifyConjuration, .fortifyHealth, .damageMagickaRegen]))!,
        Ingredient(id: 15,
                   name: ConstrainedName(rawValue: "Boar Tusk")!,
                   effects: Effect.DefaultEffectId.values([.fortifyStamina, .fortifyHealth, .fortifyBlock, .frenzy]))!,
        Ingredient(id: 16,
                   name: ConstrainedName(rawValue: "Bone Meal")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fortifyConjuration, .resistFire, .ravageStamina]))!,
        Ingredient(id: 17,
                   name: ConstrainedName(rawValue: "Briar Heart")!,
                   effects: Effect.DefaultEffectId.values([.restoreMagicka, .fortifyBlock, .paralysis, .fortifyMagicka]))!,
        Ingredient(id: 18,
                   name: ConstrainedName(rawValue: "Burnt Spriggan Wood")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFire, .fortifyAlteration, .damageMagickaRegen, .slow]))!,
        Ingredient(id: 19,
                   name: ConstrainedName(rawValue: "Butterfly Wing")!,
                   effects: Effect.DefaultEffectId.values([.restoreHealth, .lingeringDamageStamina, .fortifyBarter, .damageMagicka]))!,
        Ingredient(id: 20,
                   name: ConstrainedName(rawValue: "Canis Root")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fortifyMarksman, .fortifyOneHanded, .paralysis]))!,
        Ingredient(id: 21,
                   name: ConstrainedName(rawValue: "Charred Skeever Hide")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .resistPoison, .cureDisease, .restoreHealth]))!,
        Ingredient(id: 22,
                   name: ConstrainedName(rawValue: "Chaurus Eggs")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToPoison, .fortifyStamina, .damageMagicka, .invisibility]))!,
        Ingredient(id: 23,
                   name: ConstrainedName(rawValue: "Chaurus Hunter Antennae")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fortifyConjuration, .damageMagickaRegen, .fortifyEnchanting]))!,
        Ingredient(id: 24,
                   name: ConstrainedName(rawValue: "Chicken's Egg")!,
                   effects: Effect.DefaultEffectId.values([.resistMagic, .waterbreathing, .damageMagickaRegen, .lingeringDamageStamina]))!,
        Ingredient(id: 25,
                   name: ConstrainedName(rawValue: "Creep Cluster")!,
                   effects: Effect.DefaultEffectId.values([.restoreMagicka, .fortifyCarryWeight, .damageStaminaRegen, .weaknessToMagic]))!,
        Ingredient(id: 26,
                   name: ConstrainedName(rawValue: "Crimson Nirnroot")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .invisibility, .damageStamina, .resistMagic]))!,
        Ingredient(id: 27,
                   name: ConstrainedName(rawValue: "Cyrodilic Spadetail")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fear, .fortifyRestoration, .ravageHealth]))!,
        Ingredient(id: 28,
                   name: ConstrainedName(rawValue: "Daedra Heart")!,
                   effects: Effect.DefaultEffectId.values([.damageStaminaRegen, .damageMagicka, .restoreHealth, .fear]))!,
        Ingredient(id: 29,
                   name: ConstrainedName(rawValue: "Deathbell")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .ravageStamina, .slow, .weaknessToPoison]))!,
        Ingredient(id: 30,
                   name: ConstrainedName(rawValue: "Dragon's Tongue")!,
                   effects: Effect.DefaultEffectId.values([.resistFire, .fortifyBarter, .fortifyIllusion, .fortifyTwoHanded]))!,
        Ingredient(id: 31,
                   name: ConstrainedName(rawValue: "Dwarven Oil")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToMagic, .regenerateMagicka, .fortifyIllusion, .restoreMagicka]))!,
        Ingredient(id: 32,
                   name: ConstrainedName(rawValue: "Ectoplasm")!,
                   effects: Effect.DefaultEffectId.values([.restoreMagicka, .fortifyDestruction, .fortifyMagicka, .damageHealth]))!,
        Ingredient(id: 33,
                   name: ConstrainedName(rawValue: "Elves Ear")!,
                   effects: Effect.DefaultEffectId.values([.restoreMagicka, .weaknessToFrost, .fortifyMarksman, .resistFire]))!,
        Ingredient(id: 34,
                   name: ConstrainedName(rawValue: "Emperor Parasol Moss")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .fortifyMagicka, .regenerateHealth, .fortifyTwoHanded]))!,
        Ingredient(id: 35,
                   name: ConstrainedName(rawValue: "Eye Of Sabre Cat")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .damageMagicka, .ravageHealth, .restoreHealth]))!,
        Ingredient(id: 36,
                   name: ConstrainedName(rawValue: "Falmer Ear")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .frenzy, .resistPoison, .fortifyLockpicking]))!,
        Ingredient(id: 37,
                   name: ConstrainedName(rawValue: "Felsaad Tern Feathers")!,
                   effects: Effect.DefaultEffectId.values([.restoreHealth, .fortifyLightArmor, .cureDisease, .resistMagic]))!,
        Ingredient(id: 38,
                   name: ConstrainedName(rawValue: "Fire Salts")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFrost, .restoreMagicka, .resistFire, .regenerateMagicka]))!,
        Ingredient(id: 39,
                   name: ConstrainedName(rawValue: "Fly Amanita")!,
                   effects: Effect.DefaultEffectId.values([.resistFire, .frenzy, .fortifyTwoHanded, .regenerateStamina]))!,
        Ingredient(id: 40,
                   name: ConstrainedName(rawValue: "Frost Mirriam")!,
                   effects: Effect.DefaultEffectId.values([.resistFrost, .fortifySneak, .ravageMagicka, .damageStaminaRegen]))!,
        Ingredient(id: 41,
                   name: ConstrainedName(rawValue: "Frost Salts")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFire, .resistFrost, .restoreMagicka, .fortifyConjuration]))!,
        Ingredient(id: 42,
                   name: ConstrainedName(rawValue: "Garlic")!,
                   effects: Effect.DefaultEffectId.values([.resistPoison, .fortifyStamina, .regenerateMagicka, .regenerateHealth]))!,
        Ingredient(id: 43,
                   name: ConstrainedName(rawValue: "Giant Lichen")!,
                   effects: Effect.DefaultEffectId.values([.ravageHealth, .weaknessToPoison, .weaknessToShock, .restoreMagicka]))!,
        Ingredient(id: 44,
                   name: ConstrainedName(rawValue: "Giant's Toe")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .fortifyCarryWeight, .fortifyHealth, .damageStaminaRegen]))!,
        Ingredient(id: 45,
                   name: ConstrainedName(rawValue: "Gleamblossom")!,
                   effects: Effect.DefaultEffectId.values([.resistMagic, .fear, .regenerateHealth, .paralysis]))!,
        Ingredient(id: 46,
                   name: ConstrainedName(rawValue: "Glow Dust")!,
                   effects: Effect.DefaultEffectId.values([.damageMagicka, .fortifyDestruction, .damageMagickaRegen, .resistShock]))!,
        Ingredient(id: 47,
                   name: ConstrainedName(rawValue: "Glowing Mushroom")!,
                   effects: Effect.DefaultEffectId.values([.resistShock, .fortifyDestruction, .fortifySmithing, .fortifyHealth]))!,
        Ingredient(id: 48,
                   name: ConstrainedName(rawValue: "Grass Pod")!,
                   effects: Effect.DefaultEffectId.values([.resistPoison, .ravageMagicka, .fortifyAlteration, .restoreMagicka]))!,
        Ingredient(id: 49,
                   name: ConstrainedName(rawValue: "Hagraven Claw")!,
                   effects: Effect.DefaultEffectId.values([.resistMagic, .lingeringDamageMagicka, .fortifyEnchanting, .fortifyBarter]))!,
        Ingredient(id: 50,
                   name: ConstrainedName(rawValue: "Hagraven Feathers")!,
                   effects: Effect.DefaultEffectId.values([.damageMagicka, .frenzy, .fortifyConjuration, .weaknessToShock]))!,
        Ingredient(id: 51,
                   name: ConstrainedName(rawValue: "Hanging Moss")!,
                   effects: Effect.DefaultEffectId.values([.damageMagicka, .damageMagickaRegen, .fortifyHealth, .fortifyOneHanded]))!,
        Ingredient(id: 52,
                   name: ConstrainedName(rawValue: "Hawk Beak")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .resistFrost, .fortifyCarryWeight, .resistShock]))!,
        Ingredient(id: 53,
                   name: ConstrainedName(rawValue: "Hawk Feathers")!,
                   effects: Effect.DefaultEffectId.values([.cureDisease, .fortifyLightArmor, .fortifyOneHanded, .fortifySneak]))!,
        Ingredient(id: 54,
                   name: ConstrainedName(rawValue: "Hawk's Egg")!,
                   effects: Effect.DefaultEffectId.values([.resistMagic, .damageMagickaRegen, .waterbreathing, .lingeringDamageStamina]))!,
        Ingredient(id: 55,
                   name: ConstrainedName(rawValue: "Histcarp")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyMagicka, .damageStaminaRegen, .waterbreathing]))!,
        Ingredient(id: 56,
                   name: ConstrainedName(rawValue: "Honeycomb")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyBlock, .fortifyLightArmor, .ravageStamina]))!,
        Ingredient(id: 57,
                   name: ConstrainedName(rawValue: "Human Flesh")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .paralysis, .restoreMagicka, .fortifySneak]))!,
        Ingredient(id: 58,
                   name: ConstrainedName(rawValue: "Human Heart")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .damageMagickaRegen, .damageMagicka, .frenzy]))!,
        Ingredient(id: 59,
                   name: ConstrainedName(rawValue: "Ice Wraith Teeth")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFrost, .fortifyHeavyArmor, .invisibility, .weaknessToFire]))!,
        Ingredient(id: 60,
                   name: ConstrainedName(rawValue: "Imp Stool")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .paralysis, .lingeringDamageHealth, .restoreHealth]))!,
        Ingredient(id: 61,
                   name: ConstrainedName(rawValue: "Jarrin Root")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .damageStamina, .damageMagicka, .damageMagickaRegen]))!,
        Ingredient(id: 62,
                   name: ConstrainedName(rawValue: "Jazbay Grapes")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToMagic, .fortifyMagicka, .regenerateMagicka, .ravageHealth]))!,
        Ingredient(id: 63,
                   name: ConstrainedName(rawValue: "Juniper Berries")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFire, .regenerateHealth, .fortifyMarksman, .damageStaminaRegen]))!,
        Ingredient(id: 64,
                   name: ConstrainedName(rawValue: "Large Antlers")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyStamina, .slow, .damageStaminaRegen]))!,
        Ingredient(id: 65,
                   name: ConstrainedName(rawValue: "Lavender")!,
                   effects: Effect.DefaultEffectId.values([.resistMagic, .fortifyStamina, .ravageMagicka, .fortifyConjuration]))!,
        Ingredient(id: 66,
                   name: ConstrainedName(rawValue: "Luna Moth Wing")!,
                   effects: Effect.DefaultEffectId.values([.damageMagicka, .fortifyLightArmor, .regenerateHealth, .invisibility]))!,
        Ingredient(id: 67,
                   name: ConstrainedName(rawValue: "Moon Sugar")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFire, .resistFrost, .restoreMagicka, .regenerateMagicka]))!,
        Ingredient(id: 68,
                   name: ConstrainedName(rawValue: "Mora Tapinella")!,
                   effects: Effect.DefaultEffectId.values([.restoreMagicka, .lingeringDamageHealth, .regenerateStamina, .fortifyIllusion]))!,
        Ingredient(id: 69,
                   name: ConstrainedName(rawValue: "Mudcrab Chitin")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .cureDisease, .resistPoison, .resistFire]))!,
        Ingredient(id: 70,
                   name: ConstrainedName(rawValue: "Namira's Rot")!,
                   effects: Effect.DefaultEffectId.values([.damageMagicka, .fear, .fortifyLockpicking, .regenerateHealth]))!,
        Ingredient(id: 71,
                   name: ConstrainedName(rawValue: "Netch Jelly")!,
                   effects: Effect.DefaultEffectId.values([.paralysis, .fortifyCarryWeight, .restoreStamina, .fear]))!,
        Ingredient(id: 72,
                   name: ConstrainedName(rawValue: "Nightshade")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .damageMagickaRegen, .lingeringDamageStamina, .fortifyDestruction]))!,
        Ingredient(id: 73,
                   name: ConstrainedName(rawValue: "Nirnroot")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .damageStamina, .invisibility, .resistMagic]))!,
        Ingredient(id: 74,
                   name: ConstrainedName(rawValue: "Nordic Barnacle")!,
                   effects: Effect.DefaultEffectId.values([.damageMagicka, .waterbreathing, .regenerateHealth, .fortifyPickpocket]))!,
        Ingredient(id: 75,
                   name: ConstrainedName(rawValue: "Orange Dartwing")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .ravageMagicka, .fortifyPickpocket, .lingeringDamageHealth]))!,
        Ingredient(id: 76,
                   name: ConstrainedName(rawValue: "Pearl")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .restoreMagicka, .fortifyBlock, .resistShock]))!,
        Ingredient(id: 77,
                   name: ConstrainedName(rawValue: "Pine Thrush Egg")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyLockpicking, .weaknessToPoison, .resistShock]))!,
        Ingredient(id: 78,
                   name: ConstrainedName(rawValue: "Poison Bloom")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .slow, .fortifyCarryWeight, .fear]))!,
        Ingredient(id: 79,
                   name: ConstrainedName(rawValue: "Powdered Mammoth Tusk")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .weaknessToFire, .fortifySneak, .fear]))!,
        Ingredient(id: 80,
                   name: ConstrainedName(rawValue: "Purple Mountain Flower")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifySneak, .lingeringDamageMagicka, .resistFrost]))!,
        Ingredient(id: 81,
                   name: ConstrainedName(rawValue: "Red Mountain Flower")!,
                   effects: Effect.DefaultEffectId.values([.restoreMagicka, .ravageMagicka, .fortifyMagicka, .damageHealth]))!,
        Ingredient(id: 82,
                   name: ConstrainedName(rawValue: "River Betty")!,
                   effects: Effect.DefaultEffectId.values([.damageHealth, .fortifyAlteration, .slow, .fortifyCarryWeight]))!,
        Ingredient(id: 83,
                   name: ConstrainedName(rawValue: "Rock Warbler Egg")!,
                   effects: Effect.DefaultEffectId.values([.restoreHealth, .fortifyOneHanded, .damageStamina, .weaknessToMagic]))!,
        Ingredient(id: 84,
                   name: ConstrainedName(rawValue: "Sabre Cat Tooth")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyHeavyArmor, .fortifySmithing, .weaknessToPoison]))!,
        Ingredient(id: 85,
                   name: ConstrainedName(rawValue: "Salmon Roe")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .waterbreathing, .fortifyMagicka, .regenerateMagicka]))!,
        Ingredient(id: 86,
                   name: ConstrainedName(rawValue: "Salt Pile")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToMagic, .fortifyRestoration, .slow, .regenerateMagicka]))!,
        Ingredient(id: 87,
                   name: ConstrainedName(rawValue: "Scaly Pholiota")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToMagic, .fortifyIllusion, .regenerateStamina, .fortifyCarryWeight]))!,
        Ingredient(id: 88,
                   name: ConstrainedName(rawValue: "Scathecraw")!,
                   effects: Effect.DefaultEffectId.values([.ravageHealth, .ravageStamina, .ravageMagicka, .lingeringDamageHealth]))!,
        Ingredient(id: 89,
                   name: ConstrainedName(rawValue: "Silverside Perch")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .damageStaminaRegen, .ravageHealth, .resistFrost]))!,
        Ingredient(id: 90,
                   name: ConstrainedName(rawValue: "Skeever Tail")!,
                   effects: Effect.DefaultEffectId.values([.damageStaminaRegen, .ravageHealth, .damageHealth, .fortifyLightArmor]))!,
        Ingredient(id: 91,
                   name: ConstrainedName(rawValue: "Slaughterfish Egg")!,
                   effects: Effect.DefaultEffectId.values([.resistPoison, .fortifyPickpocket, .lingeringDamageHealth, .fortifyStamina]))!,
        Ingredient(id: 92,
                   name: ConstrainedName(rawValue: "Slaughterfish Scales")!,
                   effects: Effect.DefaultEffectId.values([.resistFrost, .lingeringDamageHealth, .fortifyHeavyArmor, .fortifyBlock]))!,
        Ingredient(id: 93,
                   name: ConstrainedName(rawValue: "Small Antlers")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToPoison, .fortifyRestoration, .lingeringDamageStamina, .damageHealth]))!,
        Ingredient(id: 94,
                   name: ConstrainedName(rawValue: "Small Pearl")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyOneHanded, .fortifyRestoration, .resistFrost]))!,
        Ingredient(id: 95,
                   name: ConstrainedName(rawValue: "Snowberries")!,
                   effects: Effect.DefaultEffectId.values([.resistFire, .fortifyEnchanting, .resistFrost, .resistShock]))!,
        Ingredient(id: 96,
                   name: ConstrainedName(rawValue: "Spawn Ash")!,
                   effects: Effect.DefaultEffectId.values([.ravageStamina, .resistFire, .fortifyEnchanting, .ravageMagicka]))!,
        Ingredient(id: 97,
                   name: ConstrainedName(rawValue: "Spider Egg")!,
                   effects: Effect.DefaultEffectId.values([.damageStamina, .damageMagickaRegen, .fortifyLockpicking, .fortifyMarksman]))!,
        Ingredient(id: 98,
                   name: ConstrainedName(rawValue: "Spriggan Sap")!,
                   effects: Effect.DefaultEffectId.values([.damageMagickaRegen, .fortifyEnchanting, .fortifySmithing, .fortifyAlteration]))!,
        Ingredient(id: 99,
                   name: ConstrainedName(rawValue: "Swamp Fungal Pod")!,
                   effects: Effect.DefaultEffectId.values([.resistShock, .lingeringDamageMagicka, .paralysis, .restoreHealth]))!,
        Ingredient(id: 100,
                   name: ConstrainedName(rawValue: "Taproot")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToMagic, .fortifyIllusion, .regenerateMagicka, .restoreMagicka]))!,
        Ingredient(id: 101,
                   name: ConstrainedName(rawValue: "Thistle Branch")!,
                   effects: Effect.DefaultEffectId.values([.resistFrost, .ravageStamina, .resistPoison, .fortifyHeavyArmor]))!,
        Ingredient(id: 102,
                   name: ConstrainedName(rawValue: "Torchbug Thorax")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .lingeringDamageMagicka, .weaknessToMagic, .fortifyStamina]))!,
        Ingredient(id: 103,
                   name: ConstrainedName(rawValue: "Trama Root")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToShock, .fortifyCarryWeight, .damageMagicka, .slow]))!,
        Ingredient(id: 104,
                   name: ConstrainedName(rawValue: "Troll Fat")!,
                   effects: Effect.DefaultEffectId.values([.resistPoison, .fortifyTwoHanded, .frenzy, .damageHealth]))!,
        Ingredient(id: 105,
                   name: ConstrainedName(rawValue: "Tundra Cotton")!,
                   effects: Effect.DefaultEffectId.values([.resistMagic, .fortifyMagicka, .fortifyBlock, .fortifyBarter]))!,
        Ingredient(id: 106,
                   name: ConstrainedName(rawValue: "Vampire Dust")!,
                   effects: Effect.DefaultEffectId.values([.invisibility, .regenerateHealth, .restoreMagicka, .cureDisease]))!,
        Ingredient(id: 107,
                   name: ConstrainedName(rawValue: "Void Salts")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToShock, .resistMagic, .damageHealth, .fortifyMagicka]))!,
        Ingredient(id: 108,
                   name: ConstrainedName(rawValue: "Wheat")!,
                   effects: Effect.DefaultEffectId.values([.restoreHealth, .fortifyHealth, .damageStaminaRegen, .lingeringDamageMagicka]))!,
        Ingredient(id: 109,
                   name: ConstrainedName(rawValue: "White Cap")!,
                   effects: Effect.DefaultEffectId.values([.weaknessToFrost, .fortifyHeavyArmor, .restoreMagicka, .ravageMagicka]))!,
        Ingredient(id: 110,
                   name: ConstrainedName(rawValue: "Wisp Wrappings")!,
                   effects: Effect.DefaultEffectId.values([.restoreStamina, .fortifyDestruction, .fortifyCarryWeight, .resistMagic]))!,
        Ingredient(id: 111,
                   name: ConstrainedName(rawValue: "Yellow Mountain Flower")!,
                   effects: Effect.DefaultEffectId.values([.resistPoison, .fortifyRestoration, .fortifyHealth, .damageStaminaRegen]))!
    ]
}
